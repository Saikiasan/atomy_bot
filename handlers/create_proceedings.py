from telegram import Update
from telegram.ext import ContextTypes,CallbackContext,ConversationHandler
from datetime import date

GET_PROCEEDINGS, GET_LINK = range(2)

async def create_proceeding(update: Update, context: CallbackContext):
  await update.message.reply_text(
    "Hi! I will be helping you create the proceedings for today's meeting.\n"
    "Please provide the proceedings in a sequence from top to bottom as the below example shown."
  )
  await update.message.reply_text(
    "ID verify & settings\n"
    "Hosting\n"
    "Meeting Link Sharing\n"
    "Joining process\n"
    "..."
    )
  return GET_PROCEEDINGS

async def get_proceeding(update: Update, context: CallbackContext):
  context.user_data['proceeding'] = update.message.text
  await update.message.reply_text(
    "Great! \n Now provide the meeting link for today!"
  )
  return GET_LINK

async def get_link(update: Update, context: CallbackContext):
  context.user_data['link']= update.message.text
  p = context.user_data['proceeding']
  l = context.user_data['link']
  s=p.count('\n') +1
  d = date.today()

  text = f"""            тнРЁЯМН * l LOVE ATOMY INDIAЁЯМНтнР
  ЁЯУЭрж╢рж┐ржХрзНрж╖рж╛рз░ ржЕржмрж┐рж╣ржирзЗ рж╕ржлрж▓рждрж╛ ржЕрж╕ржорзНржнрз▒,ржЧрждрж┐ржХрзЗ рж╢рж┐ржХрзЛ ржЖрж╣ржХтЬНтЬНтЬНЁЯзнЁЯзнЁЯзнЁЯзнЁЯзнЁЯзнЁЯзнЁЯзн
  ЁЯОпЁЯОпЁЯОпЁЯОпЁЯОпЁЯОпЁЯОпЁЯОпЁЯОп

  ЁЯЩПЁЯЩПЁЯЩПржиржорж╕рзНржХрж╛рз░*ржоржЗ рж╢рзНрз░рзАржорждрзА ржХрзЗржЪржи ржжрждрзНржд 
  рж╢ржжрж┐ржпрж╝рж╛*рз░ ржкрз░рж╛ рж╕ржХрж▓рзЛржХрзЗ ржЖржЬрж┐рз░ ржжрж┐ржирз░ ржкрзНрз░рж╢рж┐ржХрзНрж╖ржгрж▓рзИ ржЖржжрз░ржгрж┐ ржЬржирж╛ржЗржЫрзЛ*ЁЯЩПЁЯЩПЁЯЩПЁЯСПЁЯСПЁЯСПЁЯМ╣ЁЯМ╣ЁЯМ╣

  рж╕ржХрж▓рзЛ рж╕ржжрж╕рзНржп рж╕ржжрж╕рзНржпрж╛ржХ  рж╣рж╛рждржд ржмрж╣рзА  ржХрж▓ржо рж▓рзИ
  ржЕржирж▓рж╛ржЗржи ржкрзНрз░рж╢рж┐ржХрзНрж╖ржгржд ржЙржкрж╕рзНржерж┐ржд*ржерж╛ржХрж┐ржмрж▓рзИ ржмрж┐ржиржорзНрз░рждрж╛рз░рзЗ*ржЕржирзБрз░рзЛржз ржЬржирж╛рж▓рзЛржБредЁЯЩПЁЯЩПЁЯЩП

  ржЖржЬрж┐ ржкрзНрз░рж╢рж┐ржХрзНрж╖ржгржд ржЖрж▓рзЛржЪрзЛржирж╛ *рж╣ржмрж▓ржЧрзАржпрж╝рж╛ ржмрж┐рж╖ржпрж╝ рж╕ржорзВрж╣ рж╣рж▓ **ЁЯСЗЁЯСЗЁЯСЗЁЯСЗЁЯСЗ
  {p}
  ЁЯСЗЁЯСЗЁЯСЗ
  ржПржЗ {s} ржЯрж╛ ржХрж╛рз░рзНржпрзНржпрж╕рзВржЪрзА ржЖржЧржмрзЭрж╛ржЗ ржирж┐ржм ржЖржорж╛рз░ ржорж╛ржЬрз░ ржПржЬржи ржЧрзНрз░рзЗржЯ ржПржХрзНржЯрж┐ржн  рж▓рж┐ржбрж╛рз░ рж╢рзНрз░рзА ржжрзАржкржХ ржЯрзЗрз░ржг ржЫрж╛рз░рзЗ (*рз▒рзЗрж╖рзНржЯ ржХрж╛рз░рзНржмрж┐ ржЖржВрж▓ржВ*рз░ ржкрз░рж╛ )ЁЯЧгЁЯЧгЁЯЧгЁЯОдЁЯОдЁЯОдЁЯУгЁЯУгЁЯУг

  ржЖржкрзБржирж┐ ржПржЗ {s} ржЯрж╛ ржХрж╛рз░рзНржпрзНржпрж╕рзВржЪрзА рж╢рж┐ржХрж┐ржм ржЖрз░рзБ ржмрзБржЬрж┐ржм ржкрж╛рз░рж┐ржм ржмрж╣рж┐ ржХрж▓ржо рж╣рж╛рждржд рж▓рзИ ржмрж╣рж┐ржм
  ЁЯЩПЁЯзХЁЯС░ЁЯС╕ЁЯХ╡ЁЯСоЁЯС╖ЁЯС│ЁЯзСтАНЁЯН│ЁЯзСтАНЁЯж│ЁЯзСтАНЁЯж░ЁЯзФЁЯзСЁЯдЭЁЯСН

  ЁЯСЗЁЯСЗЁЯСЗЁЯСЗЁЯСЗЁЯСЗЁЯСЗЁЯСЗ

  {l}
 
  ЁЯСЖЁЯСЖЁЯСЖЁЯСЖЁЯСЖЁЯСЖЁЯСЖЁЯСЖ
  ржУржкрз░рз░ рж▓рж┐ржВржХржд ржХрзНрж▓рж┐ржХ ржХрз░рж┐ ржорж┐ржЯрж┐ржВржд ржкрзНрз░рз▒рзЗрж╢ ржХрз░рж┐ржм  ржкрж╛рз░рж┐ржм

  рж╕ржоржпрж╝ -ржжрзБржкрз░рзАржпрж╝рж╛ 12 ржмржЬрж╛ржд
  рждрж╛рз░рж┐ржЦ {d}
  ржзржирзНржпржмрж╛ржжЁЯЩПЁЯЩП"""

  await update.message.reply_text(text)

async def cancel(update: Update, context: CallbackContext):
  await update.message.reply_text(
    "Task Cancelled!"
  )
  return ConversationHandler.END